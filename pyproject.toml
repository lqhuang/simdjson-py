[build-system]
requires = [
  "scikit-build-core>0.8",
  "cmake>=3.26",
  "ninja",
  "nanobind",
  "wheel",
]
build-backend = "scikit_build_core.build"

[project]
name = "simdjson"
version = "0.0.1"
description = "Python native bindings for simdjson"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Lanqing Huang", email = "lqhuang@typef.io" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: Apache Software License",
  "Typing :: Typed",
]

dependencies = ["importlib_metadata>=4.6; python_version<'3.10'"]

[project.optional-dependencies]
test = ["pytest"]
dev = ["pytest"]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
]
[project.urls]
Homepage = "https://github.com/lqhuang/simdjson-py"


[tool.scikit-build]
cmake.args = ["-G Ninja"]
ninja.make-fallback = false

# The wheel will automatically look for Python packages at
# src/<package_name>, python/<package_name>, and <package_name>,
# in that order.
wheel.packages = ["src/simdjson"]
wheel.license-files = ["LICENSE"]

editable.mode = "redirect"
# editable.verbose = true
# editable.rebuild = false

build-dir = "build/{wheel_tag}"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"

[tool.mypy]
files = ["src/simdjson", "tests"]
warn_unused_configs = true

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "PGH", # pygrep-hooks
  "PL",  # pylint
  "RUF", # Ruff-specific
  "UP",  # pyupgrade
  "YTT", # flake8-2020
]
